/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C4*/SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(8) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009numero_liquidacion VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) not null,\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(num_cuenta VARCHAR(12),retiro DECIMAL(10,2),cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 20:32:33.123000','2025-03-12 20:32:33.123000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 20:32:33.125000','2025-03-12 20:32:33.125000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 20:32:33.125000','2025-03-12 20:32:33.125000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
/*C5*/SET SCHEMA PUBLIC
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DISCONNECT
/*C7*/SET SCHEMA COOPERATIVA
INSERT INTO TRANSACCION VALUES('AF-00001-CAP-1',100.00,'2025-03-12 20:37:59.484000','','AF-00001-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAP'
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',100.00,'Aportaciones','2025-03-12 20:32:33.125000','2025-03-12 20:32:33.125000','AF-00001',NULL)
COMMIT
SET SCHEMA PUBLIC
DISCONNECT
/*C2*/SET SCHEMA PUBLIC
DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(retiro DECIMAL(10,2),cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009SET num_cuenta = SELECT numero_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
/*C8*/SET SCHEMA PUBLIC
DISCONNECT
/*C9*/SET SCHEMA COOPERATIVA
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-1',100.00,'2025-03-12 20:48:51.487000','','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',100.00,'Retirable','2025-03-12 20:32:33.125000','2025-03-12 20:32:33.125000','AF-00001',NULL)
COMMIT
SET SCHEMA PUBLIC
DISCONNECT
/*C10*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
SET SCHEMA PUBLIC
DISCONNECT
/*C11*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 3
/*C12*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 4
SET SCHEMA PUBLIC
DISCONNECT
/*C11*/SET SCHEMA PUBLIC
DISCONNECT
/*C13*/SET SCHEMA PUBLIC
DISCONNECT
/*C14*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 5
SET SCHEMA PUBLIC
DISCONNECT
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(retiro DECIMAL(10,2),cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009SET num_cuenta = SELECT numero_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
/*C15*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 6
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 7
SET SCHEMA PUBLIC
DISCONNECT
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009SET num_cuenta = SELECT numero_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
/*C16*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 8
SET SCHEMA PUBLIC
DISCONNECT
/*C17*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 9
SET SCHEMA PUBLIC
DISCONNECT
/*C4*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 10
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a \u0009SET liq = SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 11
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 12
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 13
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 14
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 15
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 16
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 17
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 18
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 19
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 20
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 21
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion('AF-00001-CAR',retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 22
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 23
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 24
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 25
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 26
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 27
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 28
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 29
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 30
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 31
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 32
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 33
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 34
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 35
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 36
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 37
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 38
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 39
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 40
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 41
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 42
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 43
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 44
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 45
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 46
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 47
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 48
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 49
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 50
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 51
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 52
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 53
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 54
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 55
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 56
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 57
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 58
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 59
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 60
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 61
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 62
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 63
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 64
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 65
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 66
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 67
SET SCHEMA PUBLIC
DROP SCHEMA COOPERATIVA CASCADE
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(8) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(9) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009numero_liquidacion VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) not null,\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 21:34:48.543000','2025-03-12 21:34:48.543000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 21:34:48.543000','2025-03-12 21:34:48.543000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 21:34:48.543000','2025-03-12 21:34:48.543000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
/*C18*/SET SCHEMA PUBLIC
DISCONNECT
/*C19*/SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
SET SCHEMA PUBLIC
DISCONNECT
/*C4*/SET SCHEMA PUBLIC
DROP SCHEMA COOPERATIVA CASCADE
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) not null,\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(9),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 21:36:45.245000','2025-03-12 21:36:45.245000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 21:36:45.245000','2025-03-12 21:36:45.245000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 21:36:45.245000','2025-03-12 21:36:45.245000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
/*C20*/SET SCHEMA COOPERATIVA
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-1',110.10,'2025-03-12 21:37:09.784000','','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',110.10,'Retirable','2025-03-12 21:36:45.245000','2025-03-12 21:36:45.245000','AF-00001',NULL)
COMMIT
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
SET SCHEMA PUBLIC
DISCONNECT
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 3
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 4
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO LIQUIDACION VALUES('LIQ-00004',10.00,'2025-03-12 21:44:10.876000','Parcial','AF-00001')
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-2',-10.00,'2025-03-12 21:44:10.876000','Retiro Parcial','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',100.10,'Retirable','2025-03-12 21:36:45.245000','2025-03-12 21:36:45.245000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 5
COMMIT
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 6
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 7
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,func,cod_emp);\u000d\u000a\u0009\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,func,cod_emp);\u000d\u000a\u0009\u000d\u000a \u0009SELECT j.numero_liquidacion INTO liq FROM(SELECT l.numero_liquidacion \u000d\u000a\u0009FROM COOPERATIVA.liquidacion l WHERE cod_emp = l.codigo_empleado \u000d\u000a\u0009ORDER BY l.fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 9
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 10
SET SCHEMA PUBLIC
DROP SCHEMA COOPERATIVA CASCADE
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(9),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 21:56:13.630000','2025-03-12 21:56:13.630000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 21:56:13.630000','2025-03-12 21:56:13.630000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 21:56:13.630000','2025-03-12 21:56:13.630000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
SET SCHEMA PUBLIC
DROP SCHEMA cooperativa CASCADE
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(9),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(8);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 21:56:46.441000','2025-03-12 21:56:46.441000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 21:56:46.441000','2025-03-12 21:56:46.441000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 21:56:46.441000','2025-03-12 21:56:46.441000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a\u0009DECLARE liq VARCHAR(9);\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 3
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion,numero_liquidacion) VALUES(func, liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 4
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES('AF-00001-CAR-1','LIQ-00004');\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO LIQUIDACION VALUES('LIQ-00004',10.00,'2025-03-12 22:04:06.466000','Parcial','AF-00001')
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-1',-10.00,'2025-03-12 22:04:06.466000','Retiro Parcial','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',-10.00,'Retirable','2025-03-12 21:56:46.441000','2025-03-12 21:56:46.441000','AF-00001',NULL)
INSERT INTO TRANSACCION_LIQUIDACION VALUES('AF-00001-CAR-1','LIQ-00004')
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 5
COMMIT
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1) j;\u000d\u000a\u0009\u000d\u000a\u0009SELECT j.numero_liquidacion INTO liq FROM (SELECT numero_liquidacion \u000d\u000a    FROM COOPERATIVA.liquidacion \u000d\u000a    WHERE codigo_empleado = cod_emp ORDER BY fecha_de_retiro DESC LIMIT 1) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES(func,liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 6
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC) j;\u000d\u000a\u0009\u000d\u000a\u0009SELECT j.numero_liquidacion INTO liq FROM (SELECT numero_liquidacion \u000d\u000a    FROM COOPERATIVA.liquidacion \u000d\u000a    WHERE codigo_empleado = cod_emp ORDER BY fecha_de_retiro DESC) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES(func,liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 7
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) ;\u000d\u000a\u0009DECLARE liq VARCHAR(9) ;\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SELECT j.codigo_transaccion INTO func FROM (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC) j;\u000d\u000a\u0009\u000d\u000a\u0009SELECT j.numero_liquidacion INTO liq FROM (SELECT numero_liquidacion \u000d\u000a    FROM COOPERATIVA.liquidacion \u000d\u000a    WHERE codigo_empleado = cod_emp ORDER BY fecha_de_retiro DESC) j;\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES(func,liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 8
/*C2*/DROP PROCEDURE PUBLIC.COOPERATIVA.CREAR_LIQUIDACION_PARCIAL
/*C4*/SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1);\u000d\u000a\u0009\u000d\u000a\u0009SET liq = (SELECT numero_liquidacion \u000d\u000a    FROM COOPERATIVA.liquidacion \u000d\u000a    WHERE codigo_empleado = cod_emp ORDER BY fecha_de_retiro DESC LIMIT 1);\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES(func,liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO LIQUIDACION VALUES('LIQ-00008',10.00,'2025-03-12 22:09:23.940000','Parcial','AF-00001')
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-2',-10.00,'2025-03-12 22:09:23.940000','Retiro Parcial','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',-20.00,'Retirable','2025-03-12 21:56:46.441000','2025-03-12 21:56:46.441000','AF-00001',NULL)
INSERT INTO TRANSACCION_LIQUIDACION VALUES('AF-00001-CAR-2','LIQ-00008')
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 9
COMMIT
SET SCHEMA PUBLIC
DROP SCHEMA COOPERATIVA CASCADE
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009id_usuario VARCHAR(8),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009PRIMARY KEY(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_usuario) REFERENCES COOPERATIVA.usuario_cliente(id_usuario),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(9),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
--SEQUENCES\u000d\u000aCREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
--FUNCTIONS\u000d\u000aCREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND \u000d\u000a\u000d\u000a
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario AS (SELECT * FROM COOPERATIVA.usuario_cliente WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_usuario_telefono AS (SELECT * FROM COOPERATIVA.usuario_telefono WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_cuenta AS (SELECT * FROM COOPERATIVA.cuenta WHERE 1=0) WITH CHECK OPTION
CREATE VIEW IF NOT EXISTS COOPERATIVA.respaldo_transaccion AS (SELECT * FROM COOPERATIVA.transaccion WHERE 1=0) WITH CHECK OPTION
--TRIGGERS\u000d\u000aDROP TRIGGER IF EXISTS usuario_cliente_tia
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
DROP TRIGGER IF EXISTS liquidacion_tib
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_de_pago = CONCAT(newrow.numero_prestamos, CONCAT('-',COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)));\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tda\u000d\u000aAFTER DELETE ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING old ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.respaldo_usuario (\u000d\u000a        codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, fecha_de_creacion, \u000d\u000a        fecha_ultima_actualizacion, usuario_creador, usuario_modificador\u000d\u000a    ) VALUES (\u000d\u000a        oldrow.codigo_empleado, oldrow.id_usuario, oldrow.contrasena, oldrow.rol, oldrow.fecha_nacimiento, \u000d\u000a        oldrow.primer_nombre, oldrow.segundo_nombre, oldrow.primer_apellido, oldrow.segundo_apellido, oldrow.referencia, \u000d\u000a        oldrow.ciudad, oldrow.avenida, oldrow.casa, oldrow.departamento, oldrow.calle, \u000d\u000a        oldrow.correo_primario, oldrow.correo_secundario, oldrow.fecha_de_creacion, \u000d\u000a        oldrow.fecha_ultima_actualizacion, oldrow.usuario_creador, oldrow.usuario_modificador\u000d\u000a    );\u000d\u000aEND
--PROCEDURE\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contrasena,\u000d\u000a        rol = rol,\u000d\u000a        fecha_nacimiento = fecha_nacimiento,\u000d\u000a        primer_nombre = primer_nombre,\u000d\u000a        segundo_nombre = segundo_nombre,\u000d\u000a        primer_apellido = primer_apellido,\u000d\u000a        segundo_apellido = segundo_apellido,\u000d\u000a        referencia = referencia,\u000d\u000a        ciudad = ciudad,\u000d\u000a        avenida = avenida,\u000d\u000a        casa = casa,\u000d\u000a        departamento = departamento,\u000d\u000a        calle = calle,\u000d\u000a        correo_primario = correo_primario,\u000d\u000a        correo_secundario = correo_secundario,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE id_usuario = usuario;\u000d\u000a\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(num_cuenta VARCHAR(12), sald DECIMAL(10,2), descrip VARCHAR(256))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) VALUES(sald,descrip,num_cuenta);\u000d\u000a\u0009\u0009UPDATE COOPERATIVA.cuenta c SET c.saldo = c.saldo + sald WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(cod_emp VARCHAR(8),retiro DECIMAL(10,2))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a\u0009DECLARE liq VARCHAR(9) DEFAULT '';\u000d\u000a\u0009DECLARE num_cuenta VARCHAR(12);\u000d\u000a\u0009INSERT INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES(retiro,'Parcial',cod_emp);\u000d\u000a\u0009\u000d\u000a\u0009SELECT numero_cuenta INTO num_cuenta FROM COOPERATIVA.cuenta WHERE cod_emp = codigo_empleado AND tipo = 'Retirable';\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_transaccion(num_cuenta,retiro*(-1),'Retiro Parcial');\u000d\u000a\u000d\u000a\u0009SET func = (SELECT t.codigo_transaccion\u000d\u000a\u0009FROM COOPERATIVA.transaccion t WHERE num_cuenta = t.numero_cuenta \u000d\u000a\u0009ORDER BY t.fecha DESC LIMIT 1);\u000d\u000a\u0009\u000d\u000a\u0009SET liq = (SELECT numero_liquidacion \u000d\u000a    FROM COOPERATIVA.liquidacion \u000d\u000a    WHERE codigo_empleado = cod_emp ORDER BY fecha_de_retiro DESC LIMIT 1);\u000d\u000a \u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, NUMERO_LIQUIDACION) VALUES(func,liq);\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-12 22:10:10.554000','2025-03-12 22:10:10.554000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',0.00,'Retirable','2025-03-12 22:10:10.555000','2025-03-12 22:10:10.555000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',0.00,'Aportaciones','2025-03-12 22:10:10.555000','2025-03-12 22:10:10.555000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
/*C21*/SET SCHEMA COOPERATIVA
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-1',100.00,'2025-03-12 22:10:32.733000','','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',100.00,'Retirable','2025-03-12 22:10:10.555000','2025-03-12 22:10:10.555000','AF-00001',NULL)
COMMIT
INSERT INTO LIQUIDACION VALUES('LIQ-00001',10.00,'2025-03-12 22:10:38.011000','Parcial','AF-00001')
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-2',-10.00,'2025-03-12 22:10:38.012000','Retiro Parcial','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',90.00,'Retirable','2025-03-12 22:10:10.555000','2025-03-12 22:10:10.555000','AF-00001',NULL)
INSERT INTO TRANSACCION_LIQUIDACION VALUES('AF-00001-CAR-2','LIQ-00001')
ALTER SEQUENCE COOPERATIVA.LIQUIDACION_SEQ RESTART WITH 2
COMMIT
SET SCHEMA PUBLIC
DISCONNECT
/*C4*/SET SCHEMA PUBLIC
DISCONNECT
/*C2*/DISCONNECT
/*C3*/SET SCHEMA PUBLIC
DISCONNECT
