/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C4*/SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
/*C5*/SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
CREATE SCHEMA COOPERATIVA AUTHORIZATION SA
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_cliente(\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009id_usuario VARCHAR(100) UNIQUE NOT NULL,\u000d\u000a\u0009contrasena VARCHAR(1000)  NOT NULL,\u000d\u000a\u0009rol BOOLEAN NOT NULL,\u000d\u000a\u0009estado BOOLEAN DEFAULT TRUE,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100) NOT NULL,\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100) NOT NULL,\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8) DEFAULT current_user,\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.usuario_telefono(\u000d\u000a\u0009telefonos VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_empleado, telefonos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cuenta(\u000d\u000a\u0009numero_cuenta VARCHAR(12)  NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009estado BOOLEAN DEFAULT TRUE,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009pendiente DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009tipo VARCHAR(12) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_cuenta),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion(\u000d\u000a\u0009codigo_transaccion VARCHAR(100) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009comentario VARCHAR(256),\u000d\u000a\u0009numero_cuenta VARCHAR(12) NOT null,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_cuenta) REFERENCES COOPERATIVA.cuenta(numero_cuenta)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion(\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009monto DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009fecha_de_retiro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009tipo VARCHAR(8) NOT NULL,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(numero_liquidacion),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.transaccion_liquidacion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009numero_liquidacion VARCHAR(9) NOT NULL,\u000d\u000a\u0009PRIMARY KEY(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.prestamo(\u000d\u000a\u0009numero_prestamos VARCHAR(16)  not NULL,\u000d\u000a\u0009monto DECIMAL(10,2) NOT NULL ,\u000d\u000a\u0009tipo VARCHAR(11) NOT NULL,\u000d\u000a\u0009fecha_de_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009estado BOOLEAN DEFAULT TRUE,\u000d\u000a\u0009saldo DECIMAL(10,2) DEFAULT 0,\u000d\u000a\u0009periodos INT DEFAULT 12,\u000d\u000a\u0009codigo_empleado VARCHAR(8) NOT NULL,\u000d\u000a\u0009fecha_ultima_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009usuario_creador VARCHAR(8),\u000d\u000a\u0009usuario_modificador VARCHAR(8),\u000d\u000a\u0009PRIMARY KEY(numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.pagos(\u000d\u000a\u0009numero_de_pago VARCHAR(5), \u000d\u000a\u0009capital DECIMAL(10,2),\u000d\u000a\u0009interes DOUBLE,\u000d\u000a\u0009fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009PRIMARY KEY(numero_de_pago,numero_prestamos),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos) REFERENCES COOPERATIVA.prestamo(numero_prestamos)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.liquidacion_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009numero_liquidacion VARCHAR(9),\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_liquidacion) REFERENCES COOPERATIVA.liquidacion(numero_liquidacion)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER PRIMARY KEY,\u000d\u000a\u0009fecha DATE DEFAULT CURRENT_DATE NOT NULL,\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_pagos\u000d\u000a(\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009numero_de_pago VARCHAR(5),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(numero_prestamos,numero_de_pago) REFERENCES COOPERATIVA.pagos(numero_prestamos,numero_de_pago),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.cierre_transaccion\u000d\u000a(\u000d\u000a\u0009codigo_transaccion VARCHAR(100),\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009PRIMARY KEY (codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(codigo_transaccion) REFERENCES COOPERATIVA.transaccion(codigo_transaccion),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE TABLE IF NOT EXISTS COOPERATIVA.dividendos\u000d\u000a(\u000d\u000a\u0009id_cierre INTEGER,\u000d\u000a\u0009codigo_empleado VARCHAR(8),\u000d\u000a    nombre VARCHAR(200),\u000d\u000a    saldo DECIMAL(100,2),\u000d\u000a\u0009ganancias DECIMAL(100,2),\u000d\u000a\u0009estado BOOLEAN DEFAULT TRUE,\u000d\u000a\u0009porcentaje DOUBLE,\u000d\u000a\u0009FOREIGN KEY(codigo_empleado) REFERENCES COOPERATIVA.usuario_cliente(codigo_empleado),\u000d\u000a\u0009FOREIGN KEY(id_cierre) REFERENCES  COOPERATIVA.cierre(id_cierre)\u000d\u000a)
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.codigo_empleado_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
CREATE SEQUENCE IF NOT EXISTS COOPERATIVA.liquidacion_seq\u000d\u000a\u0009START WITH 1\u000d\u000a\u0009INCREMENT BY 1
DISCONNECT
/*C4*/CREATE FUNCTION COOPERATIVA.emp_generador()\u000d\u000aRETURNS VARCHAR(8)\u000d\u000aCONTAINS SQL\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_abono(numero VARCHAR(12))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_abono BIGINT;\u000d\u000a\u0009SET num_abono = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.transaccion\u000d\u000a\u0009WHERE numero_cuenta = numero;\u000d\u000a\u0009RETURN num_abono + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_pago(numero VARCHAR(16))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_pago BIGINT;\u000d\u000a\u0009SET num_pago = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.pagos\u000d\u000a\u0009WHERE numero_prestamos = numero;\u000d\u000a\u0009RETURN num_pago + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_num_prestamo(numero VARCHAR(8))\u000d\u000aRETURNS BIGINT\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE\u000d\u000a\u0009num_prestamo BIGINT;\u000d\u000a\u0009SET num_prestamo = SELECT count(*)\u000d\u000a\u0009FROM COOPERATIVA.prestamo\u000d\u000a\u0009WHERE codigo_empleado = numero;\u000d\u000a\u0009RETURN num_prestamo + 1;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.contar_prestamos(codigo_emp VARCHAR(8))\u000d\u000aRETURNS int\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000aDECLARE counts int;\u000d\u000aSELECT COALESCE(COUNT(*), 0) INTO counts\u000d\u000aFROM (COOPERATIVA.usuario_cliente c INNER JOIN COOPERATIVA.prestamo  p \u000d\u000aON p.codigo_empleado = c.codigo_empleado)  WHERE c.codigo_empleado = codigo_emp and p.estado = true;\u000d\u000a\u0009RETURN counts;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.calcular_pmt(\u000d\u000a    capital DECIMAL(10,2), \u000d\u000a    tipo VARCHAR(10), \u000d\u000a    meses DECIMAL(10,6)\u000d\u000a) RETURNS DECIMAL(10,2)\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE pmt DECIMAL(20,6);\u000d\u000a\u0009\u000d\u000a    SET pmt = CASE \u000d\u000a        WHEN tipo = 'Fiduciario' THEN \u000d\u000a            TRUNC((capital * (0.1500 / meses)) / \u000d\u000a                 (1.00000 - POWER(1 + (0.1500 / meses), -meses)), 2)\u000d\u000a        WHEN tipo = 'Automatico' THEN \u000d\u000a            TRUNC((capital * (0.1000 / meses)) / \u000d\u000a                 (1.00000 - POWER(1 + (0.1000 / meses), -meses)), 2)\u000d\u000a        ELSE 0\u000d\u000a    END CASE;\u000d\u000a    \u000d\u000a    RETURN pmt;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.calcular_ipmt(\u000d\u000a    pendiente DECIMAL(10,2), \u000d\u000a    tipo VARCHAR(10), \u000d\u000a    meses INT\u000d\u000a) RETURNS DECIMAL(10,2)\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE tasa_mensual DOUBLE;\u000d\u000a    DECLARE ipmt DECIMAL(10,2);\u000d\u000a\u000d\u000a    SET tasa_mensual = CASE \u000d\u000a        WHEN tipo = 'Fiduciario' THEN 0.15000/meses\u000d\u000a        WHEN tipo = 'Automatico' THEN  0.1000/meses  \u000d\u000a        ELSE 0\u000d\u000a    END;\u000d\u000a\u000d\u000a    SET ipmt = pendiente * tasa_mensual;\u000d\u000a\u000d\u000a    RETURN ipmt;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.calcular_ppmt(capital DECIMAL(10,2), saldo DECIMAL(10,2),tipo VARCHAR(10), meses INT) \u000d\u000aRETURNS DECIMAL(10,2)\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE pmt DECIMAL(10,2);\u000d\u000a    DECLARE ipmt DECIMAL(10,2);\u000d\u000a    DECLARE ppmt DECIMAL(10,2);\u000d\u000a\u000d\u000a    SET pmt = COOPERATIVA.calcular_pmt(capital, tipo, meses);\u000d\u000a    SET ipmt = COOPERATIVA.calcular_ipmt(saldo, tipo, meses);\u000d\u000a    SET ppmt = pmt - ipmt;\u000d\u000a    RETURN ppmt;\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.conseguir_prestamo(code_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009monto decimal(10,2),\u000d\u000a\u0009saldo decimal(10,2),\u000d\u000a\u0009fecha date,\u000d\u000a\u0009numero_prestamos VARCHAR(16),\u000d\u000a\u0009periodos int,\u000d\u000a\u0009tipo VARCHAR(10)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE(SELECT monto,saldo,fecha_de_creacion,numero_prestamos,periodos,tipo\u000d\u000aFROM COOPERATIVA.usuario_cliente c INNER JOIN COOPERATIVA.prestamo  p \u000d\u000aON p.codigo_empleado = c.codigo_empleado WHERE c.codigo_empleado = code_emp AND p.estado = true);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_por_id(usuario VARCHAR(100))\u000d\u000aRETURNS TABLE (\u000d\u000a    codigo_empleado VARCHAR(8),\u000d\u000a    id_usuario VARCHAR(100),\u000d\u000a    contrasena VARCHAR(1000),\u000d\u000a    rol BOOLEAN,\u000d\u000a    estado BOOLEAN,\u000d\u000a    fecha_nacimiento DATE,\u000d\u000a    primer_nombre VARCHAR(100),\u000d\u000a    segundo_nombre VARCHAR(100),\u000d\u000a    primer_apellido VARCHAR(100),\u000d\u000a    segundo_apellido VARCHAR(100),\u000d\u000a    referencia VARCHAR(100),\u000d\u000a    ciudad VARCHAR(100),\u000d\u000a    avenida VARCHAR(100),\u000d\u000a    casa VARCHAR(100),\u000d\u000a    departamento VARCHAR(100),\u000d\u000a    calle VARCHAR(100),\u000d\u000a    correo_primario VARCHAR(100),\u000d\u000a    correo_secundario VARCHAR(100),\u000d\u000a    fecha_de_creacion TIMESTAMP,\u000d\u000a    fecha_ultima_actualizacion TIMESTAMP,\u000d\u000a    usuario_creador VARCHAR(8),\u000d\u000a    usuario_modificador VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    RETURN TABLE\u000d\u000a        (SELECT \u000d\u000a           *\u000d\u000a        FROM COOPERATIVA.usuario_cliente\u000d\u000a        WHERE id_usuario = usuario);\u000d\u000a    \u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_usuario_telefono(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8), telefonos VARCHAR(8)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC \u000d\u000a\u0009RETURN TABLE (SELECT * FROM COOPERATIVA.usuario_telefono WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.obtener_cuenta(codigo_emp VARCHAR(8))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009numero_cuenta VARCHAR(12),\u000d\u000a\u0009saldo DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE (SELECT numero_cuenta, saldo-pendiente FROM COOPERATIVA.cuenta WHERE codigo_empleado = codigo_emp);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.ingresos_por_cierre(cierre int)\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009empleado VARCHAR(8),\u000d\u000a\u0009nombre VARCHAR(201),\u000d\u000a\u0009ingresos_totales decimal(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a RETURN TABLE (SELECT u.codigo_empleado, \u000d\u000a           COALESCE(u.primer_nombre || ' ', '') ||COALESCE(u.primer_apellido,''), \u000d\u000a           SUM(c.saldo)\u000d\u000a    FROM COOPERATIVA.cuenta c INNER JOIN COOPERATIVA.usuario_cliente u ON u.codigo_empleado = c.codigo_empleado \u000d\u000a    WHERE u.estado = TRUE AND c.tipo = 'Aportaciones'\u000d\u000a    GROUP BY u.codigo_empleado, u.primer_nombre, u.primer_apellido);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.dividendos_anio(anio INT)\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARCHAR(8),\u000d\u000a\u0009fecha date,\u000d\u000a\u0009nombre VARCHAR(201),\u000d\u000a\u0009saldo DECIMAL(10,2),\u000d\u000a\u0009porcentaje DECIMAL(10,2),\u000d\u000a\u0009ganancia DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE(SELECT d.codigo_empleado,c.fecha,d.nombre,d.saldo,\u000d\u000a\u0009CASE WHEN sum(d.ganancias) = 0 THEN 0 ELSE 100 * d.ganancias / SUM(d.ganancias) \u000d\u000a    END AS porcentaje,sum(d.ganancias) AS ganancias FROM COOPERATIVA.dividendos d INNER JOIN COOPERATIVA.cierre c ON \u000d\u000a    c.id_cierre = d.id_cierre WHERE YEAR(c.fecha) = anio\u000d\u000a\u0009GROUP BY d.codigo_empleado, c.fecha, d.nombre, d.saldo, d.ganancias);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.nuevas_afiliaciones(anio int)\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a\u0009codigo_empleado VARChar(8),\u000d\u000a\u0009nombre VARCHAR(201),\u000d\u000a\u0009fecha_afiliacion DATE,\u000d\u000a\u0009inversion DECIMAL(10,2),\u000d\u000a\u0009ahorro DECIMAL(10,2),\u000d\u000a\u0009total DECIMAL(10,2)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009RETURN TABLE\u000d\u000a\u0009(SELECT u.codigo_empleado,u.primer_nombre || ' ' || u.primer_apellido, u.fecha_de_creacion, \u000d\u000a\u0009d.SALDO_1, d.SALDO_2, d.SALDO_1 + d.SALDO_2\u000d\u000a\u0009FROM (SELECT\u000d\u000a\u0009c1.CODIGO_EMPLEADO,c1.SALDO AS SALDO_1,c2.SALDO AS SALDO_2 \u000d\u000a\u0009FROM COOPERATIVA.CUENTA c1 JOIN COOPERATIVA.CUENTA c2 \u000d\u000a    ON c1.CODIGO_EMPLEADO = c2.CODIGO_EMPLEADO AND c1.NUMERO_CUENTA < c2.NUMERO_CUENTA) d \u000d\u000a\u0009INNER JOIN COOPERATIVA.usuario_cliente u ON d.codigo_empleado = u.codigo_empleado \u000d\u000a\u0009WHERE YEAR(u.fecha_de_creacion) = anio);\u000d\u000aEND
CREATE FUNCTION COOPERATIVA.estado_cuenta(anio int, cuenta VARCHAR(12))\u000d\u000aRETURNS TABLE\u000d\u000a(\u000d\u000a    codigo_transaccion VARCHAR(100),\u000d\u000a    monto DECIMAL(10,2),\u000d\u000a    comentario TIMESTAMP,\u000d\u000a    descripcion VARCHAR(256)\u000d\u000a)\u000d\u000aREADS SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000aDECLARE usuario VARCHAR(8);\u000d\u000aSELECT codigo_empleado INTO usuario FROM COOPERATIVA.cuenta WHERE numero_cuenta = cuenta;\u000d\u000a\u000d\u000aRETURN TABLE\u000d\u000a(\u000d\u000a\u0009SELECT * FROM\u000d\u000a    (SELECT codigo_transaccion,monto,fecha,comentario FROM COOPERATIVA.transaccion WHERE cuenta = numero_cuenta AND anio = EXTRACT(YEAR FROM fecha) \u000d\u000a    UNION SELECT 'Cierre '|| c.id_cierre, d.ganancias, c.fecha, 'Ganancias del usuario.' FROM \u000d\u000a    COOPERATIVA.dividendos d INNER JOIN COOPERATIVA.cierre c ON d.id_cierre = c.id_cierre WHERE anio = EXTRACT(YEAR FROM c.fecha)\u000d\u000a    AND usuario = codigo_empleado UNION \u000d\u000a    SELECT p.numero_prestamos || p.numero_de_pago,capital + interes, fecha, 'Pago para el prestamo '|| p.numero_prestamos\u000d\u000a    FROM COOPERATIVA.prestamo pr INNER JOIN COOPERATIVA.pagos p ON p.numero_prestamos = pr.numero_prestamos INNER JOIN \u000d\u000a    COOPERATIVA.cierre_pagos cr ON p.numero_de_pago = cr.numero_de_pago INNER JOIN COOPERATIVA.cierre c ON cr.id_cierre = c.id_cierre\u000d\u000a    WHERE anio = EXTRACT(YEAR FROM c.fecha) AND usuario = pr.codigo_empleado\u000d\u000a    ) ORDER BY fecha\u000d\u000a);\u000d\u000aEND
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
CREATE PROCEDURE COOPERATIVA.crear_usuario(codigo_empleado VARCHAR(8),\u000d\u000a\u0009id_usuario VARCHAR(100),\u000d\u000a\u0009contrasena VARCHAR(1000),\u000d\u000a\u0009rol BOOLEAN,\u000d\u000a\u0009fecha_nacimiento DATE,\u000d\u000a\u0009primer_nombre VARCHAR(100),\u000d\u000a\u0009segundo_nombre VARCHAR(100),\u000d\u000a\u0009primer_apellido VARCHAR(100),\u000d\u000a\u0009segundo_apellido VARCHAR(100),\u000d\u000a\u0009referencia VARCHAR(100),\u000d\u000a\u0009ciudad VARCHAR(100),\u000d\u000a\u0009avenida VARCHAR(100),\u000d\u000a\u0009casa VARCHAR(100),\u000d\u000a\u0009departamento VARCHAR(100),\u000d\u000a\u0009calle VARCHAR(100),\u000d\u000a\u0009correo_primario VARCHAR(100),\u000d\u000a\u0009correo_secundario VARCHAR(100),\u000d\u000a\u0009creador VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_cliente(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario,usuario_creador) VALUES\u000d\u000a\u0009(codigo_empleado, id_usuario, contrasena, rol, fecha_nacimiento, \u000d\u000a        primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, referencia, \u000d\u000a        ciudad, avenida, casa, departamento, calle, \u000d\u000a        correo_primario, correo_secundario, creador);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.actualizar_usuario(\u000d\u000a\u0009codigo_emp VARCHAR(8),\u000d\u000a    usuario VARCHAR(100),\u000d\u000a    contra VARCHAR(1000),\u000d\u000a    rol_ BOOLEAN,\u000d\u000a    fecha_n DATE,\u000d\u000a    primer_n VARCHAR(100),\u000d\u000a    segundo_n VARCHAR(100),\u000d\u000a    primer_a VARCHAR(100),\u000d\u000a    segundo_a VARCHAR(100),\u000d\u000a    refe VARCHAR(100),\u000d\u000a    ciudad_ VARCHAR(100),\u000d\u000a    ave VARCHAR(100),\u000d\u000a    casa_ VARCHAR(100),\u000d\u000a    depa VARCHAR(100),\u000d\u000a    calle_ VARCHAR(100),\u000d\u000a    correo_p VARCHAR(100),\u000d\u000a    correo_s VARCHAR(100),\u000d\u000a    modificador VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    UPDATE COOPERATIVA.usuario_cliente\u000d\u000a    SET \u000d\u000a        contrasena = contra,\u000d\u000a        rol = rol_,\u000d\u000a        fecha_nacimiento = fecha_n,\u000d\u000a        primer_nombre = primer_n,\u000d\u000a        segundo_nombre = segundo_n,\u000d\u000a        primer_apellido = primer_a,\u000d\u000a        segundo_apellido = segundo_a,\u000d\u000a        referencia = refe,\u000d\u000a        ciudad = ciudad_,\u000d\u000a        avenida = ave,\u000d\u000a        casa = casa_,\u000d\u000a        departamento = depa,\u000d\u000a        calle = calle_,\u000d\u000a        correo_primario = correo_p,\u000d\u000a        correo_secundario = correo_s,\u000d\u000a        usuario_modificador = modificador,\u000d\u000a\u0009\u0009fecha_ultima_actualizacion = CURRENT_TIMESTAMP\u000d\u000a        WHERE codigo_empleado = codigo_emp;\u000d\u000a\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_usuario_telefono(codigo_emp VARCHAR(8), telef VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.usuario_telefono(codigo_empleado,telefonos) VALUES (codigo_emp, telef);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_transaccion(\u000d\u000a    num_cuenta VARCHAR(12),\u000d\u000a    sald DECIMAL(10,2),\u000d\u000a    descrip VARCHAR(256)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE func VARCHAR(100) DEFAULT '';\u000d\u000a    DECLARE cierre INT;\u000d\u000a    DECLARE pend DECIMAL(10,2);\u000d\u000a    DECLARE saldo_actual DECIMAL(10,2);\u000d\u000a\u000d\u000a    INSERT INTO COOPERATIVA.transaccion(monto, comentario, numero_cuenta) \u000d\u000a    VALUES (sald, descrip, num_cuenta);\u000d\u000a\u000d\u000a    SELECT pendiente, saldo INTO pend, saldo_actual\u000d\u000a    FROM COOPERATIVA.cuenta \u000d\u000a    WHERE numero_cuenta = num_cuenta;\u000d\u000a    \u000d\u000a    IF sald >= 0 THEN\u000d\u000a        IF pend > 0 THEN\u000d\u000a            IF sald >= pend THEN\u000d\u000a                UPDATE COOPERATIVA.cuenta \u000d\u000a                SET pendiente = 0, saldo = saldo + (sald - pend)\u000d\u000a                WHERE numero_cuenta = num_cuenta;\u000d\u000a            ELSE\u000d\u000a                UPDATE COOPERATIVA.cuenta \u000d\u000a                SET pendiente = pendiente - sald\u000d\u000a                WHERE numero_cuenta = num_cuenta;\u000d\u000a            END IF;\u000d\u000a        ELSE\u000d\u000a            UPDATE COOPERATIVA.cuenta \u000d\u000a            SET saldo = saldo + sald\u000d\u000a            WHERE numero_cuenta = num_cuenta;\u000d\u000a        END IF;\u000d\u000a        \u000d\u000a    ELSE\u000d\u000a        IF saldo_actual > 0 THEN\u000d\u000a            IF -sald >= saldo_actual THEN\u000d\u000a                UPDATE COOPERATIVA.cuenta \u000d\u000a                SET saldo = 0, pendiente = pendiente - (sald - saldo_actual)\u000d\u000a                WHERE numero_cuenta = num_cuenta;\u000d\u000a            ELSE\u000d\u000a                UPDATE COOPERATIVA.cuenta \u000d\u000a                SET saldo = saldo + sald\u000d\u000a                WHERE numero_cuenta = num_cuenta;\u000d\u000a            END IF;\u000d\u000a        ELSE\u000d\u000a            UPDATE COOPERATIVA.cuenta \u000d\u000a            SET pendiente = pendiente + sald\u000d\u000a            WHERE numero_cuenta = num_cuenta;\u000d\u000a        END IF;\u000d\u000a    END IF;\u000d\u000a\u000d\u000a    SET func = (\u000d\u000a        SELECT codigo_transaccion\u000d\u000a        FROM COOPERATIVA.transaccion \u000d\u000a        WHERE numero_cuenta = num_cuenta \u000d\u000a        ORDER BY fecha DESC \u000d\u000a        LIMIT 1\u000d\u000a    );\u000d\u000a\u000d\u000a    SET cierre = (\u000d\u000a        SELECT id_cierre \u000d\u000a        FROM COOPERATIVA.cierre \u000d\u000a        ORDER BY fecha DESC \u000d\u000a        LIMIT 1\u000d\u000a    );\u000d\u000a\u000d\u000a    INSERT INTO COOPERATIVA.cierre_transaccion(codigo_transaccion, id_cierre) \u000d\u000a    VALUES (func, cierre);\u000d\u000a    \u000d\u000aEND
\u000d\u000aCREATE PROCEDURE COOPERATIVA.modificar_cuenta(num_cuenta VARCHAR(12), sald DECIMAL(10,2), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009UPDATE COOPERATIVA.cuenta c \u000d\u000a\u0009SET c.saldo = sald, c.fecha_ultima_actualizacion = CURRENT_TIMESTAMP, c.usuario_modificador = cod_emp \u000d\u000a\u0009WHERE c.numero_cuenta = num_cuenta;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_prestamo(mont DECIMAL(10,2),per INT, tip VARCHAR(10), cod_emp VARCHAR(8))\u000d\u000aMODIFIES SQL DATA \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009INSERT INTO COOPERATIVA.prestamo(monto,saldo,periodos,tipo,codigo_empleado,usuario_creador) VALUES(mont,mont,per,tip,cod_emp,cod_emp);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_pago(\u000d\u000a    num_prest VARCHAR(16),\u000d\u000a    monto DECIMAL(10,2),\u000d\u000a    saldo DECIMAL(10,2),\u000d\u000a    tipo VARCHAR(10),\u000d\u000a    meses INT,\u000d\u000a    usuario VARCHAR(8)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE pmt DECIMAL(10,2);\u000d\u000a    DECLARE ipmt DECIMAL(10,2);\u000d\u000a    DECLARE ppmt DECIMAL(10,2);\u000d\u000a\u0009DECLARE codigo VARCHAR(8);\u000d\u000a\u0009 DECLARE num VARCHAR(16);\u000d\u000aIF meses - 1 > (SELECT COUNT(*) FROM COOPERATIVA.pagos WHERE num_prest = numero_prestamos) THEN\u000d\u000a    \u000d\u000a\u0009SET pmt = COOPERATIVA.calcular_pmt(monto, tipo, meses);\u000d\u000a    SET ipmt = COOPERATIVA.calcular_ipmt(saldo, tipo, meses);\u000d\u000a    SET ppmt = COOPERATIVA.calcular_ppmt(monto,saldo, tipo, meses);\u000d\u000a\u000d\u000a    INSERT INTO COOPERATIVA.pagos(numero_prestamos, capital, interes)\u000d\u000a    VALUES (num_prest, ppmt, ipmt);\u000d\u000a    UPDATE COOPERATIVA.prestamo\u000d\u000a    SET saldo = saldo - ppmt,  \u000d\u000a        fecha_ultima_actualizacion = CURRENT_TIMESTAMP,\u000d\u000a        usuario_modificador = usuario\u000d\u000a    WHERE numero_prestamos = num_prest;\u000d\u000a    \u000d\u000aELSE\u000d\u000a\u000d\u000a\u0009SET pmt = COOPERATIVA.calcular_pmt(monto, tipo, meses);\u000d\u000a    SET ipmt = COOPERATIVA.calcular_ipmt(saldo, tipo, meses);\u000d\u000a    SET ppmt = COOPERATIVA.calcular_ppmt(monto,saldo, tipo, meses);\u000d\u000a    INSERT INTO COOPERATIVA.pagos(numero_prestamos, capital, interes)\u000d\u000a    VALUES (num_prest, ppmt, ipmt);\u000d\u000a    UPDATE COOPERATIVA.prestamo\u000d\u000a    SET saldo = saldo - ppmt,  \u000d\u000a        fecha_ultima_actualizacion = CURRENT_TIMESTAMP,\u000d\u000a        usuario_modificador = usuario\u000d\u000a    WHERE numero_prestamos = num_prest;\u000d\u000a    UPDATE COOPERATIVA.prestamo\u000d\u000a       SET estado = FALSE,\u000d\u000a            fecha_ultima_actualizacion = CURRENT_TIMESTAMP,\u000d\u000a            usuario_modificador = CURRENT_USER\u000d\u000a       WHERE numero_prestamos = num_prest;\u000d\u000a    \u0009\u000d\u000aEND IF;\u000d\u000a    SELECT codigo_empleado into codigo FROM COOPERATIVA.prestamo where numero_prestamos = num_prest;\u000d\u000a    SELECT numero_cuenta into num FROM COOPERATIVA.cuenta where codigo_empleado = codigo and tipo = 'Aportaciones';\u000d\u000a    CALL COOPERATIVA.crear_transaccion(num, -pmt,'Pago de Prestamo ' || num_prest);\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.crear_cierre_pagos(usuario VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009FOR SELECT numero_prestamos,monto,saldo,tipo,periodos FROM COOPERATIVA.prestamo where estado = true DO\u000d\u000a\u0009\u0009CALL COOPERATIVA.crear_pago(numero_prestamos,monto,saldo,tipo,periodos,usuario);\u000d\u000a    END FOR;\u000d\u000aEND
\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_cierre_transaccion(cierre INT)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009\u0009DECLARE ingresos_totales DECIMAL(10,2);\u000d\u000a    FOR SELECT numero_cuenta AS num FROM COOPERATIVA.cuenta WHERE estado = true DO\u000d\u000a\u0009\u0009SELECT COALESCE(SUM(t.monto), 0) INTO ingresos_totales\u000d\u000a\u0009\u0009FROM COOPERATIVA.transaccion t INNER JOIN COOPERATIVA.cierre_transaccion c \u000d\u000a\u0009\u0009ON c.codigo_transaccion = t.codigo_transaccion\u000d\u000a        WHERE t.numero_cuenta = num\u000d\u000a        AND c.id_cierre = cierre;\u000d\u000a        IF ingresos_totales < 200 THEN \u000d\u000a                CALL COOPERATIVA.crear_transaccion(num, 200 - ingresos_totales, 'Transacci\u00f3n para cumplir condiciones de cuenta.');\u000d\u000a        END IF;\u000d\u000a    END FOR;\u000d\u000aEND
CREATE PROCEDURE COOPERATIVA.hacer_cierre(usuario VARCHAR(8))\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE cierre INT;\u000d\u000a\u0009DECLARE total DECIMAL(10,2);\u000d\u000a\u0009DECLARE suma DECIMAL(10,2);\u000d\u000a\u0009DECLARE porcentaje DOUBLE;\u000d\u000a\u0009SET cierre = SELECT id_cierre FROM cooperativa.cierre ORDER BY fecha LIMIT 1;\u000d\u000a\u0009\u000d\u000a\u0009CALL COOPERATIVA.crear_cierre_transaccion(cierre);\u000d\u000a    CALL COOPERATIVA.crear_cierre_pagos(usuario);\u000d\u000a\u0009\u000d\u000a\u0009SET total = SELECT sum(ingresos_totales) FROM TABLE(COOPERATIVA.ingresos_por_cierre(cierre));\u000d\u000a\u0009SET suma = SELECT sum(interes) FROM COOPERATIVA.pagos p INNER JOIN COOPERATIVA.cierre_pagos c \u000d\u000a\u0009ON p.numero_de_pago = c.numero_de_pago AND p.numero_prestamos = c.numero_prestamos WHERE id_cierre = cierre;\u000d\u000a\u0009\u000d\u000a\u0009FOR\u0009 SELECT empleado,nombre,ingresos_totales FROM TABLE(COOPERATIVA.ingresos_por_cierre(cierre)) DO\u000d\u000a\u0009\u0009SET porcentaje = ingresos_totales / total;\u000d\u000a\u0009\u0009INSERT INTO COOPERATIVA.dividendos(id_cierre, codigo_empleado, nombre,ganancias, porcentaje,saldo) \u000d\u000a        VALUES (cierre, empleado, nombre, porcentaje*suma,porcentaje,ingresos_totales);\u000d\u000a\u0009END FOR;\u000d\u000a\u0009\u000d\u000a\u0009INSERT INTO COOPERATIVA.cierre(fecha) VALUES (CURRENT_DATE);\u000d\u000aEND
\u0009    \u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_liquidacion_parcial(\u000d\u000a    IN cod_emp VARCHAR(8),\u000d\u000a    IN retiro DECIMAL(10,2)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE func VARCHAR(100);\u000d\u000a    DECLARE liq VARCHAR(9);\u000d\u000a    DECLARE num_cuenta VARCHAR(12);\u000d\u000a    DECLARE fech DATE;\u000d\u000a\u000d\u000a    SET fech = (SELECT c.fecha FROM COOPERATIVA.cierre c ORDER BY c.fecha DESC LIMIT 1);\u000d\u000a\u000d\u000a    SELECT numero_cuenta INTO num_cuenta \u000d\u000a    FROM COOPERATIVA.cuenta \u000d\u000a    WHERE codigo_empleado = cod_emp AND tipo = 'Retirable';\u000d\u000a\u000d\u000a    IF num_cuenta IS NOT NULL AND MONTH(fech) = 12 AND \u000d\u000a       (SELECT saldo FROM COOPERATIVA.cuenta WHERE numero_cuenta = num_cuenta) - retiro >= 0 THEN\u000d\u000a\u000d\u000a        INSERT INTO COOPERATIVA.liquidacion(monto, tipo, codigo_empleado) \u000d\u000a        VALUES (retiro, 'Parcial', cod_emp);\u000d\u000a\u000d\u000a        SET liq = SELECT numero_liquidacion \u000d\u000a        FROM COOPERATIVA.liquidacion \u000d\u000a        WHERE codigo_empleado = cod_emp \u000d\u000a        ORDER BY fecha_de_retiro DESC LIMIT 1;\u000d\u000a\u000d\u000a        CALL COOPERATIVA.crear_transaccion(num_cuenta, retiro * -1, 'Retiro Parcial');\u000d\u000a\u000d\u000a        IF EXISTS (SELECT 1 FROM COOPERATIVA.transaccion WHERE numero_cuenta = num_cuenta) THEN\u000d\u000a            SET func = SELECT codigo_transaccion \u000d\u000a            FROM COOPERATIVA.transaccion \u000d\u000a            WHERE numero_cuenta = num_cuenta \u000d\u000a            ORDER BY fecha DESC LIMIT 1;\u000d\u000a\u000d\u000a            INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, numero_liquidacion) \u000d\u000a            VALUES (func, liq);\u000d\u000a        END IF;\u000d\u000a\u0009UPDATE COOPERATIVA.DIVIDENDOS SET estado = FALSE WHERE estado = TRUE AND codigo_empleado = cod_emp;\u000d\u000a    END IF;\u000d\u000aEND
\u000d\u000aCREATE PROCEDURE COOPERATIVA.crear_liquidacion_total(\u000d\u000a    IN usuario VARCHAR(8),\u000d\u000a    IN modificador VARCHAR(8),\u000d\u000a    OUT total DECIMAL(10,2)\u000d\u000a)\u000d\u000aMODIFIES SQL DATA\u000d\u000aBEGIN ATOMIC\u000d\u000a    DECLARE v_numero_prestamos VARCHAR(16);\u000d\u000a    DECLARE v_monto DECIMAL(10,2);\u000d\u000a    DECLARE v_saldo DECIMAL(10,2);\u000d\u000a    DECLARE v_tipo VARCHAR(10);\u000d\u000a    DECLARE v_periodos INT;\u000d\u000a\u0009DECLARE v_estado BOOLEAN;\u000d\u000a    DECLARE s_apo DECIMAL(10,2);\u000d\u000a\u0009DECLARE s_re DECIMAL(10,2);\u000d\u000a    DECLARE c_apo VARCHAR(12);\u000d\u000a    DECLARE c_re VARCHAR(12);\u000d\u000a    DECLARE v_liq VARCHAR(9);\u000d\u000a    DECLARE v_pago VARCHAR(5);\u000d\u000a\u0009DECLARE func VARCHAR(100);\u000d\u000a    DECLARE v_dividendos DECIMAL(10,2) DEFAULT 0;\u000d\u000a\u0009DECLARE l_total DECIMAL(10,2);\u000d\u000a    SELECT numero_cuenta, saldo INTO c_apo,s_apo FROM COOPERATIVA.cuenta WHERE codigo_empleado = usuario AND tipo = 'Aportaciones';\u000d\u000a    SELECT numero_prestamos,monto,saldo,tipo,periodos,estado INTO v_numero_prestamos,v_monto,v_saldo,v_tipo,v_periodos,v_estado\u000d\u000a    FROM COOPERATIVA.PRESTAMO p WHERE p.ESTADO = TRUE AND p.CODIGO_EMPLEADO = usuario;\u000d\u000a\u000d\u000aIF  (SELECT COUNT(*) FROM COOPERATIVA.cuenta \u000d\u000a        WHERE codigo_empleado = usuario AND pendiente = 0) = 2 AND s_apo >= COOPERATIVA.calcular_pmt(v_monto,v_tipo,v_periodos)*v_periodos THEN\u000d\u000a    --INICIALIZAR TODO\u000d\u000a\u0009SELECT numero_cuenta, saldo INTO c_re,s_re FROM COOPERATIVA.cuenta WHERE codigo_empleado = usuario AND tipo = 'Retirable'; \u000d\u000a\u0009SET l_total = s_re + s_apo + (SELECT SUM(ganancias) FROM COOPERATIVA.dividendos WHERE codigo_empleado = usuario AND estado = TRUE);\u000d\u000a    INSERt INTO COOPERATIVA.liquidacion(monto,tipo,codigo_empleado) VALUES (L_total,'Total',modificador);\u000d\u000a\u0009SET v_liq = SELECT numero_liquidacion FROM COOPERATIVA.liquidacion WHERE codigo_empleado = modificador ORDER BY fecha_de_retiro LIMIT 1; \u000d\u000a        \u000d\u000a    while v_estado = TRUE DO\u000d\u000a\u0009\u0009CALL COOPERATIVA.crear_pago(v_numero_prestamos,v_monto,v_saldo,v_tipo,v_periodos, usuario);\u000d\u000a    \u0009SET v_pago = SELECT numero_de_pago FROM COOPERATIVA.PAGOS WHERE v_numero_prestamos = numero_prestamos ORDER BY interes asc LIMIT 1;\u000d\u000a    \u0009INSERT INTO COOPERATIVA.liquidacion_pagos(numero_de_pago,numero_prestamos,numero_liquidacion) VALUES (v_pago,v_numero_prestamos,v_liq);\u000d\u000a    \u0009SELECT estado INTO v_estado\u000d\u000a    \u0009FROM COOPERATIVA.PRESTAMO p WHERE p.NUMERO_PRESTAMOS = v_numero_prestamos AND p.CODIGO_EMPLEADO = usuario;\u000d\u000a    END WHILE;\u000d\u000a    \u000d\u000a    --Sacar dinero de las cuentas\u000d\u000a \u0009CALL COOPERATIVA.crear_transaccion(c_re,-s_re,'Liquidacion Total');\u000d\u000a \u0009SET func = SELECT codigo_transaccion FROM COOPERATIVA.transaccion WHERE numero_cuenta = c_re ORDER BY fecha DESC LIMIT 1;\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, numero_liquidacion) VALUES (func, v_liq);\u000d\u000a    CALL COOPERATIVA.crear_transaccion(c_apo,-s_apo,'Liquidacion Total');\u000d\u000a \u0009SET func = SELECT codigo_transaccion FROM COOPERATIVA.transaccion WHERE numero_cuenta = c_apo ORDER BY fecha DESC LIMIT 1;\u000d\u000a\u0009INSERT INTO COOPERATIVA.transaccion_liquidacion(codigo_transaccion, numero_liquidacion) VALUES (func, v_liq);\u000d\u000a            \u000d\u000a\u0009UPDATE COOPERATIVA.usuario_cliente SET estado = FALSE WHERE codigo_empleado = usuario;\u000d\u000a    UPDATE COOPERATIVA.cuenta SET estado = FALSE WHERE codigo_empleado = usuario;\u000d\u000a    UPDATE COOPERATIVA.dividendos SET estado = FALSE WHERE codigo_empleado = usuario;\u000d\u000a\u0009SET total = l_total;\u000d\u000aEND IF;\u000d\u000aEND
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
SET SCHEMA PUBLIC
CREATE TRIGGER usuario_cliente_tia\u000d\u000aAFTER INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS oldrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)VALUES (CONCAT(oldrow.codigo_empleado,'-CAR'),oldrow.codigo_empleado,'Retirable',oldrow.codigo_empleado);\u000d\u000a  INSERT INTO COOPERATIVA.cuenta(numero_cuenta,codigo_empleado,tipo,usuario_creador)  VALUES (CONCAT(oldrow.codigo_empleado,'-CAP'),oldrow.codigo_empleado,'Aportaciones',oldrow.codigo_empleado);\u000d\u000aEND
CREATE TRIGGER usuario_cliente_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.usuario_cliente\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a  SET newrow.codigo_empleado = CONCAT('AF-', LPAD(NEXT VALUE FOR COOPERATIVA.codigo_empleado_seq, 5, '0'));\u000d\u000aEND
CREATE TRIGGER liquidacion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.liquidacion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_liquidacion = CONCAT('LIQ-', LPAD(NEXT VALUE FOR COOPERATIVA.liquidacion_seq, 5,'0'));\u000d\u000aEND
CREATE TRIGGER  transaccion_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.transaccion\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET  newrow.codigo_transaccion = CONCAT(newrow.numero_cuenta, CONCAT('-',COOPERATIVA.conseguir_num_abono(newrow.numero_cuenta)));\u000d\u000aEND
CREATE TRIGGER prestamo_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.prestamo\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009SET newrow.numero_prestamos = CONCAT(newrow.codigo_empleado, CONCAT('-PT',COOPERATIVA.conseguir_num_prestamo(newrow.codigo_empleado)));\u000d\u000aEND
CREATE TRIGGER pagos_tib\u000d\u000aBEFORE INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS newrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC\u000d\u000a    SET newrow.numero_de_pago = RIGHT(CONCAT('00000', COOPERATIVA.conseguir_num_pago(newrow.numero_prestamos)),5);\u000d\u000aEND
CREATE TRIGGER pagos_tr_ia\u000d\u000aAFTER INSERT ON COOPERATIVA.pagos\u000d\u000aREFERENCING NEW ROW AS nrow\u000d\u000aFOR EACH ROW\u000d\u000aBEGIN ATOMIC\u000d\u000a\u0009DECLARE cierre INT;\u000d\u000a\u0009SET cierre = (SELECT ID_CIERRE FROM COOPERATIVA.CIERRE ORDER BY FECHA DESC LIMIT 1);\u000d\u000a\u0009INSERT INTO COOPERATIVA.cierre_pagos(numero_prestamos,numero_de_pago,id_cierre) VALUES(nrow.numero_prestamos, nrow.numero_de_pago,cierre);\u000d\u000aEND
CREATE TRIGGER COOPERATIVA.cierre_tr_ib\u000d\u000aBEFORE INSERT ON COOPERATIVA.cierre\u000d\u000aREFERENCING NEW ROW AS nrow\u000d\u000aFOR EACH ROW \u000d\u000aBEGIN ATOMIC \u000d\u000a    SET nrow.fecha = SELECT \u000d\u000a    COALESCE(dateadd('month',1,MAX(fecha)),CURRENT_DATE)\u000d\u000a\u0009FROM COOPERATIVA.CIERRE;\u000d\u000a\u0009SET nrow.id_cierre = SELECT COALESCE(MAX(id_cierre) + 1,1) FROM cooperativa.cierre;\u000d\u000aEND
SET SCHEMA COOPERATIVA
INSERT INTO CIERRE VALUES(1,'2025-03-27')
COMMIT
INSERT INTO USUARIO_CLIENTE VALUES('AF-00001','Admin','clave123',TRUE,TRUE,NULL,'Super',NULL,'Admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SuperAdmin@gmail.com',NULL,'2025-03-27 20:22:25.931000','2025-03-27 20:22:25.931000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',TRUE,0.00,0.00,'Retirable','2025-03-27 20:22:25.931000','2025-03-27 20:22:25.931000','AF-00001',NULL)
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',TRUE,0.00,0.00,'Aportaciones','2025-03-27 20:22:25.932000','2025-03-27 20:22:25.932000','AF-00001',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 2
COMMIT
INSERT INTO USUARIO_CLIENTE VALUES('AF-00002','mlopez92','M@rLo123',TRUE,TRUE,NULL,'Marcos','Antonio','L\u00f3pez','Fern\u00e1ndez',NULL,'Tegucigalpa','Av. Central','Casa 23B','Edificio Mirador','Calle 5','marcos.lopez92@gmail.com',NULL,'2025-03-27 20:22:25.937000','2025-03-27 20:22:25.937000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00002-CAR','AF-00002',TRUE,0.00,0.00,'Retirable','2025-03-27 20:22:25.937000','2025-03-27 20:22:25.937000','AF-00002',NULL)
INSERT INTO CUENTA VALUES('AF-00002-CAP','AF-00002',TRUE,0.00,0.00,'Aportaciones','2025-03-27 20:22:25.937000','2025-03-27 20:22:25.937000','AF-00002',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 3
COMMIT
INSERT INTO USUARIO_CLIENTE VALUES('AF-00003','sandra_gomez','SanG@2024!',FALSE,TRUE,NULL,'Sandra',NULL,'G\u00f3mez','Hern\u00e1ndez',NULL,'San Pedro Sula','Boulevard Moraz\u00e1n','Apto 304',NULL,'Calle Los Almendros','sandra.gomez@outlook.com',NULL,'2025-03-27 20:22:25.943000','2025-03-27 20:22:25.943000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00003-CAR','AF-00003',TRUE,0.00,0.00,'Retirable','2025-03-27 20:22:25.943000','2025-03-27 20:22:25.943000','AF-00003',NULL)
INSERT INTO CUENTA VALUES('AF-00003-CAP','AF-00003',TRUE,0.00,0.00,'Aportaciones','2025-03-27 20:22:25.943000','2025-03-27 20:22:25.943000','AF-00003',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 4
COMMIT
INSERT INTO USUARIO_CLIENTE VALUES('AF-00004','roberto_hernandez99','RoberH99$',TRUE,TRUE,NULL,'Roberto','Jos\u00e9','Hern\u00e1ndez','Pineda',NULL,'La Ceiba','Col. El Naranjal','Casa #14',NULL,'Calle Principal','roberto.h99@yahoo.com',NULL,'2025-03-27 20:22:25.949000','2025-03-27 20:22:25.949000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00004-CAR','AF-00004',TRUE,0.00,0.00,'Retirable','2025-03-27 20:22:25.950000','2025-03-27 20:22:25.950000','AF-00004',NULL)
INSERT INTO CUENTA VALUES('AF-00004-CAP','AF-00004',TRUE,0.00,0.00,'Aportaciones','2025-03-27 20:22:25.950000','2025-03-27 20:22:25.950000','AF-00004',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 5
COMMIT
INSERT INTO USUARIO_CLIENTE VALUES('AF-00005','karla_mendoza24','KMendoza*24',FALSE,TRUE,NULL,'Karla','Isabel','Mendoza','Castro',NULL,'Choluteca','Zona Sur','Residencial Las Palmas',NULL,'Calle 8','karla.mendoza24@hotmail.com',NULL,'2025-03-27 20:22:25.955000','2025-03-27 20:22:25.955000','SA',NULL)
INSERT INTO CUENTA VALUES('AF-00005-CAR','AF-00005',TRUE,0.00,0.00,'Retirable','2025-03-27 20:22:25.955000','2025-03-27 20:22:25.955000','AF-00005',NULL)
INSERT INTO CUENTA VALUES('AF-00005-CAP','AF-00005',TRUE,0.00,0.00,'Aportaciones','2025-03-27 20:22:25.956000','2025-03-27 20:22:25.956000','AF-00005',NULL)
ALTER SEQUENCE COOPERATIVA.CODIGO_EMPLEADO_SEQ RESTART WITH 6
COMMIT
/*C8*/SET SCHEMA PUBLIC
DISCONNECT
/*C9*/SET SCHEMA COOPERATIVA
INSERT INTO PRESTAMO VALUES('AF-00001-PT1',10000.00,'Fiduciario','2025-03-27 20:24:37.836000',TRUE,10000.00,12,'AF-00001','2025-03-27 20:24:37.836000','AF-00001',NULL)
COMMIT
INSERT INTO TRANSACCION VALUES('AF-00001-CAP-1',100000.00,'2025-03-27 20:24:46.525000','','AF-00001-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAP'
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',TRUE,100000.00,0.00,'Aportaciones','2025-03-27 20:22:25.932000','2025-03-27 20:22:25.932000','AF-00001',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00001-CAP-1',1)
COMMIT
INSERT INTO TRANSACCION VALUES('AF-00001-CAR-1',100001.00,'2025-03-27 20:24:57.594000','','AF-00001-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAR'
INSERT INTO CUENTA VALUES('AF-00001-CAR','AF-00001',TRUE,100001.00,0.00,'Retirable','2025-03-27 20:22:25.931000','2025-03-27 20:22:25.931000','AF-00001',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00001-CAR-1',1)
COMMIT
INSERT INTO TRANSACCION VALUES('AF-00002-CAP-1',200.00,'2025-03-27 20:28:33.188000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00002-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00002-CAP'
INSERT INTO CUENTA VALUES('AF-00002-CAP','AF-00002',TRUE,200.00,0.00,'Aportaciones','2025-03-27 20:22:25.937000','2025-03-27 20:22:25.937000','AF-00002',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00002-CAP-1',1)
INSERT INTO TRANSACCION VALUES('AF-00002-CAR-1',200.00,'2025-03-27 20:28:33.189000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00002-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00002-CAR'
INSERT INTO CUENTA VALUES('AF-00002-CAR','AF-00002',TRUE,200.00,0.00,'Retirable','2025-03-27 20:22:25.937000','2025-03-27 20:22:25.937000','AF-00002',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00002-CAR-1',1)
INSERT INTO TRANSACCION VALUES('AF-00003-CAP-1',200.00,'2025-03-27 20:28:33.189000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00003-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00003-CAP'
INSERT INTO CUENTA VALUES('AF-00003-CAP','AF-00003',TRUE,200.00,0.00,'Aportaciones','2025-03-27 20:22:25.943000','2025-03-27 20:22:25.943000','AF-00003',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00003-CAP-1',1)
INSERT INTO TRANSACCION VALUES('AF-00003-CAR-1',200.00,'2025-03-27 20:28:33.191000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00003-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00003-CAR'
INSERT INTO CUENTA VALUES('AF-00003-CAR','AF-00003',TRUE,200.00,0.00,'Retirable','2025-03-27 20:22:25.943000','2025-03-27 20:22:25.943000','AF-00003',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00003-CAR-1',1)
INSERT INTO TRANSACCION VALUES('AF-00004-CAP-1',200.00,'2025-03-27 20:28:33.192000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00004-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00004-CAP'
INSERT INTO CUENTA VALUES('AF-00004-CAP','AF-00004',TRUE,200.00,0.00,'Aportaciones','2025-03-27 20:22:25.950000','2025-03-27 20:22:25.950000','AF-00004',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00004-CAP-1',1)
INSERT INTO TRANSACCION VALUES('AF-00004-CAR-1',200.00,'2025-03-27 20:28:33.193000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00004-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00004-CAR'
INSERT INTO CUENTA VALUES('AF-00004-CAR','AF-00004',TRUE,200.00,0.00,'Retirable','2025-03-27 20:22:25.950000','2025-03-27 20:22:25.950000','AF-00004',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00004-CAR-1',1)
INSERT INTO TRANSACCION VALUES('AF-00005-CAP-1',200.00,'2025-03-27 20:28:33.195000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00005-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00005-CAP'
INSERT INTO CUENTA VALUES('AF-00005-CAP','AF-00005',TRUE,200.00,0.00,'Aportaciones','2025-03-27 20:22:25.956000','2025-03-27 20:22:25.956000','AF-00005',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00005-CAP-1',1)
INSERT INTO TRANSACCION VALUES('AF-00005-CAR-1',200.00,'2025-03-27 20:28:33.195000','Transacci\u00f3n para cumplir condiciones de cuenta.','AF-00005-CAR')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00005-CAR'
INSERT INTO CUENTA VALUES('AF-00005-CAR','AF-00005',TRUE,200.00,0.00,'Retirable','2025-03-27 20:22:25.955000','2025-03-27 20:22:25.955000','AF-00005',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00005-CAR-1',1)
INSERT INTO PAGOS VALUES('00001',777.58,125.0E0,'2025-03-27 20:28:33.200000','AF-00001-PT1')
INSERT INTO CIERRE_PAGOS VALUES('AF-00001-PT1','00001',1)
DELETE FROM PRESTAMO WHERE NUMERO_PRESTAMOS='AF-00001-PT1'
INSERT INTO PRESTAMO VALUES('AF-00001-PT1',10000.00,'Fiduciario','2025-03-27 20:24:37.836000',TRUE,9222.42,12,'AF-00001','2025-03-27 20:28:33.202000','AF-00001','AF-00001')
INSERT INTO TRANSACCION VALUES('AF-00001-CAP-2',-902.58,'2025-03-27 20:28:33.202000','Pago de Prestamo AF-00001-PT1','AF-00001-CAP')
DELETE FROM CUENTA WHERE NUMERO_CUENTA='AF-00001-CAP'
INSERT INTO CUENTA VALUES('AF-00001-CAP','AF-00001',TRUE,99097.42,0.00,'Aportaciones','2025-03-27 20:22:25.932000','2025-03-27 20:22:25.932000','AF-00001',NULL)
INSERT INTO CIERRE_TRANSACCION VALUES('AF-00001-CAP-2',1)
INSERT INTO DIVIDENDOS VALUES(1,'AF-00001','Super Admin',99097.42,123.75,TRUE,0.99E0)
INSERT INTO DIVIDENDOS VALUES(1,'AF-00002','Marcos L\u00f3pez',200.00,0.00,TRUE,0.0E0)
INSERT INTO DIVIDENDOS VALUES(1,'AF-00003','Sandra G\u00f3mez',200.00,0.00,TRUE,0.0E0)
INSERT INTO DIVIDENDOS VALUES(1,'AF-00004','Roberto Hern\u00e1ndez',200.00,0.00,TRUE,0.0E0)
INSERT INTO DIVIDENDOS VALUES(1,'AF-00005','Karla Mendoza',200.00,0.00,TRUE,0.0E0)
INSERT INTO CIERRE VALUES(2,'2025-04-27')
COMMIT
SET SCHEMA PUBLIC
DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DISCONNECT
/*C2*/SET SCHEMA PUBLIC
DISCONNECT
/*C3*/SET SCHEMA PUBLIC
DISCONNECT
